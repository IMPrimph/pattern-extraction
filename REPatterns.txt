uintbalance;
functionsetminsum(uint_val)
functionsetlogfile(address_log)
functioninitialized()
functionput(uint_locktime)
varacc=acc[msg.sender];
acc.balance+=msg.value;
log.addmessage(msg.sender,msg.value,"put");
functioncollect(uint_am)
varacc=acc[msg.sender];
if(acc.balance>=minsum&&acc.balance>=_am&&now>acc.unlocktime)
if(msg.sender.call.value(_am)())
if(msg.sender.call.value(_am)())
if(msg.sender.call.value(_am)())
acc.balance-=_am;
function()
message[]publichistory;
functionaddmessage(address_adr,uint_val,string_data)mapping(address=>uint256)publicbalances;
functionsetminsum(uint_val)
functionsetlogfile(address_log)
functioninitialized()
functiondeposit()
balances[msg.sender]+=msg.value;
balances[msg.sender]+=msg.value;
log.addmessage(msg.sender,msg.value,"put");
functioncollect(uint_am)
if(balances[msg.sender]>=minsum&&balances[msg.sender]>=_am)
if(balances[msg.sender]>=minsum&&balances[msg.sender]>=_am)
if(msg.sender.call.value(_am)())
if(msg.sender.call.value(_am)())
if(msg.sender.call.value(_am)())
balances[msg.sender]-=_am;
balances[msg.sender]-=_am;
function()
message[]publichistory;
functionaddmessage(address_adr,uint_val,string_data)mapping(address=>uint)publicbalances;
functionprivatebank(address_log)
functiondeposit()
if(msg.value>=mindeposit)
balances[msg.sender]+=msg.value;
balances[msg.sender]+=msg.value;
transferlog.addmessage(msg.sender,msg.value,"deposit");
functioncashout(uint_am)
if(_am<=balances[msg.sender])
if(_am<=balances[msg.sender])
if(msg.sender.call.value(_am)())
if(msg.sender.call.value(_am)())
if(msg.sender.call.value(_am)())
balances[msg.sender]-=_am;
balances[msg.sender]-=_am;
function()publicpayable{}
message[]publichistory;
functionaddmessage(address_adr,uint_val,string_data)